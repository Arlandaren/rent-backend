version: '3'

tasks:
  install-deps:
    cmds:
      - go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
      - go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

  get-deps:
    cmds:
      - go get -u google.golang.org/protobuf/cmd/protoc-gen-go
      - go get -u google.golang.org/grpc/cmd/protoc-gen-go-grpc

  generate:
    cmds:
      - task: generate-note-api

  generate-note-api:
    cmds:
      - powershell -Command "if (-Not (Test-Path -Path 'pkg/grpc/aggregator_v1')) { New-Item -ItemType Directory -Path 'pkg/grpc/aggregator_v1' }"
      - |
        protoc --proto_path proto/aggregator_v1 \
        --go_out=pkg/grpc/aggregator_v1 --go_opt=paths=source_relative \
        --go-grpc_out=pkg/grpc/aggregator_v1 --go-grpc_opt=paths=source_relative \
        proto/aggregator_v1/aggregator.proto

  generate-gateway-api:
    cmds:
      - powershell -Command "if (-Not (Test-Path -Path 'pkg/grpc/aggregator_v1')) { New-Item -ItemType Directory -Path 'pkg/grpc/aggregator_v1' }"
      - |
        protoc --proto_path proto/aggregator_v1 --proto_path ../external \
        --go_out=pkg/grpc/aggregator_v1 --go_opt=paths=source_relative \
        --go-grpc_out=pkg/grpc/aggregator_v1 --go-grpc_opt=paths=source_relative \
        --grpc-gateway_out=pkg/grpc/aggregator_v1 --grpc-gateway_opt=paths=source_relative \
        proto/aggregator_v1/aggregator.proto

  vendor-proto:
    desc: "Клонировать googleapis, если не существует vendor.protogen/google"
    cmds:
      - git clone https://github.com/googleapis/googleapis vendor.protogen/googleapis
      - mkdir vendor.protogen/google
      - move vendor.protogen/googleapis/google/api vendor.protogen/google
      - rm -rf vendor.protogen/googleapis
    preconditions:
      - not:
          dir: vendor.protogen/google