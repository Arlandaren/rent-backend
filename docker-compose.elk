version: '3'

services:
  postgres:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - pg_data:/var/lib/postgresql/data/pgdata
    ports:
      - 5433:5432
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  server:
    build: ./
    environment:
      - PG_STRING=${PG_STRING}
      - KAFKA_BROKER_ADDRESS=${KAFKA_BROKER_ADDRESS}
    volumes:
      - .:/app
    depends_on:
      - postgres
      - kafka
      - logstash
      - elasticsearch
    restart: always
    ports:
      - 8081:8080
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    restart: always
    ports:
      - "2181:2181"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  kafka:
    image: wurstmeister/kafka:latest
    restart: always
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9092,OUTSIDE://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_LISTENERS=INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:29092
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  akhq:
    image: tchiotludo/akhq:latest
    container_name: akhq
    ports:
      - "8080:8080"
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            kafka:
              properties:
                bootstrap.servers: ${KAFKA_BROKER_ADDRESS}
    depends_on:
      - kafka
      - zookeeper
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    container_name: elasticsearch
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.10
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5044:5044"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.10
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

networks:
  elk:
    driver: bridge

volumes:
  pg_data:
  esdata:
    driver: local


