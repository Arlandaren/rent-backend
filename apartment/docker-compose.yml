version: '3'

services:
  postgres:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - pg_data:/var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"

  server:
    build: .
    environment:
      - PG_STRING=${PG_STRING}
      - KAFKA_BROKER_ADDRESS=${KAFKA_BROKER_ADDRESS}
    volumes:
      - .:/app
    depends_on:
      - postgres
      - kafka
    restart: always
    ports:
      - "8090:50051"
      - "8086:8086"

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    restart: always
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    restart: always
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9092,OUTSIDE://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_LISTENERS=INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:29092
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  akhq:
    image: tchiotludo/akhq:latest
    container_name: akhq
    ports:
      - "8091:8080"
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            kafka:
              properties:
                bootstrap.servers: ${KAFKA_BROKER_ADDRESS}
    depends_on:
      - kafka
      - zookeeper

volumes:
  pg_data:

