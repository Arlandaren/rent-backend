version: '3.8'

services:
  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./nginx.grpc.conf:/etc/nginx/nginx.conf
    ports:
      - 8080:80
    depends_on:
      - customer_service
      - apartment_service
      - booking_service

  customer_service:
    build: ./customer
    environment:
      - PG_STRING=${PG_STRING_CUSTOMER}
      - KAFKA_BROKER_ADDRESS=kafka:9092
    volumes:
      - .:/app
    depends_on:
      - customer_db
      - kafka
    restart: always
    ports:
      - "8081:8080"

  apartment_service:
    build: ./apartment
    environment:
      - PG_STRING=${PG_STRING_APARTMENT}
      - KAFKA_BROKER_ADDRESS=kafka:9092
    volumes:
      - .:/app
    depends_on:
      - apartment_db
      - kafka
    restart: always
    ports:
      - "8082:8080"

  booking_service:
    build: ./booking
    environment:
      - PG_STRING=${PG_STRING_BOOKING}
      - KAFKA_BROKER_ADDRESS=kafka:9092
    volumes:
      - .:/app
    depends_on:
      - booking_db
      - kafka
    restart: always
    ports:
      - "8083:8080"

  customer_db:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - pg_customer_data:/var/lib/postgresql/data/pgdata
    ports:
      - 5436:5432

  apartment_db:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - pg_apartment_data:/var/lib/postgresql/data/pgdata
    ports:
      - 5437:5432

  booking_db:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - pg_booking_data:/var/lib/postgresql/data/pgdata
    ports:
      - 5438:5432

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    restart: always
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    restart: always
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9092,OUTSIDE://localhost:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_LISTENERS=INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:29092
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  akhq:
    image: tchiotludo/akhq:latest
    container_name: akhq
    ports:
      - "8084:8080"
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            kafka:
              properties:
                bootstrap.servers: kafka:9092
    depends_on:
      - kafka
      - zookeeper

volumes:
  pg_customer_data:
  pg_apartment_data:
  pg_booking_data:

